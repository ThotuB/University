-- A
SELECT SIGNUP.YEAR, COUNT(*) AS NUM_OF_STUDENTS
FROM SIGNUP
GROUP BY SIGNUP.YEAR

-- B
SELECT SIGNUP.YEAR, DEPARTMENT.FACULTY, DEPARTMENT.ID, COUNT(*) AS NUM_OF_STUDENTS
FROM SIGNUP
INNER JOIN STUDENT ON SIGNUP.STUDENT_ID = STUDENT.ID
INNER JOIN DEPARTMENT ON STUDENT.DEPARTMENT = DEPARTMENT.ID
GROUP BY SIGNUP.YEAR, DEPARTMENT.FACULTY, DEPARTMENT.ID

-- C
SELECT STUDENT.NAME, STUDENT.SURNAME, GRADE.COURSE_ID, AVG(GRADE.VALUE) AS AVG_GRADE
FROM STUDENT
INNER JOIN GRADE ON STUDENT.ID = GRADE.STUDENT_ID
WHERE GRADE.ELP IN ('L', 'P')
GROUP BY STUDENT.NAME, STUDENT.SURNAME, GRADE.COURSE_ID

-- D
SELECT COURSE.NAME, AVG(GRADE.VALUE) AS AVG_GRADE
FROM GRADE
INNER JOIN STUDENT ON GRADE.STUDENT_ID = STUDENT.ID
INNER JOIN COURSE ON GRADE.COURSE_ID = COURSE.ID
WHERE GRADE.ELP = 'L' AND COURSE.NAME = 'Programming'
GROUP BY COURSE.NAME

-- E
SELECT DEPARTMENT.ID, DEPARTMENT.FACULTY
FROM DEPARTMENT
INNER JOIN STUDENT ON DEPARTMENT.ID = STUDENT.DEPARTMENT
INNER JOIN GRADE ON STUDENT.ID = GRADE.STUDENT_ID
WHERE GRADE.ELP = 'E'
GROUP BY DEPARTMENT.ID, DEPARTMENT.FACULTY
HAVING COUNT(*) >= 10 AND MAX(GRADE.VALUE) = 10

-- F
SELECT STUDENT.NAME, STUDENT.SURNAME, COURSE.NAME, COURSE.ID,
AVG(CASE 
    WHEN GRADE.ELP = 'E' THEN GRADE.VALUE
END) AS EXAM_GRADE,
AVG(CASE 
    WHEN GRADE.ELP = 'L' THEN GRADE.VALUE
    WHEN GRADE.ELP = 'P' THEN GRADE.VALUE
END) AS ACTIVITY_GRADE,
(2 * AVG(CASE 
    WHEN GRADE.ELP = 'E' THEN GRADE.VALUE
END) + AVG(CASE 
    WHEN GRADE.ELP = 'L' THEN GRADE.VALUE
    WHEN GRADE.ELP = 'P' THEN GRADE.VALUE
END)) / 3 AS FINAL_GRADE
FROM STUDENT
INNER JOIN GRADE ON STUDENT.ID = GRADE.STUDENT_ID
INNER JOIN COURSE ON GRADE.COURSE_ID = COURSE.ID
GROUP BY STUDENT.NAME, STUDENT.SURNAME, COURSE.NAME, COURSE.ID
HAVING (2 * AVG(CASE 
    WHEN GRADE.ELP = 'E' THEN GRADE.VALUE
END) + AVG(CASE 
    WHEN GRADE.ELP = 'L' THEN GRADE.VALUE
    WHEN GRADE.ELP = 'P' THEN GRADE.VALUE
END)) / 3 >= 5